services:
  messenger:
    build:
      context: .
      dockerfile: main_app/Dockerfile
    container_name: messenger
    env_file:
      - .env-non-dev
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      celery:
        condition: service_started
    command: sh -c "alembic upgrade head && uvicorn main_app.main:app --host 0.0.0.0 --port 8000"

  telegram_bot:
    build:
      context: .
      dockerfile: notification_service/Dockerfile
    container_name: telegram_bot
    env_file:
      - .env-non-dev
    expose:
      - 8001
    depends_on:
      - redis
    command: sh -c "python main.py"

  db:
    image: postgres:16
    container_name: db_for_messanger
    command: -p 5435
    expose:
      - 5435
    ports:
      - "5435:5432"
    env_file:
      - .env-non-dev
    volumes:
      - db_for_messanger_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER_NAME} -d ${DB_NAME} -p 5435" ]
      interval: 10s
      retries: 3
      timeout: 5s

  redis:
    image: redis:7
    container_name: redis_for_messenger
    command: --port 6380
    expose:
      - 6380
    ports:
      - "6380:6380"

  celery:
    build:
      context: .
      dockerfile: main_app/Dockerfile
    container_name: celery_manager
    env_file:
      - .env-non-dev
    depends_on:
      - redis
    command: sh -c "celery --app=main_app.config:celery_manager worker -l INFO"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - messenger
      - telegram_bot

volumes:
  db_for_messanger_data:
